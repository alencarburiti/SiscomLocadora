/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * EntradaGUI.java
 *
 * Created on 27/05/2011, 15:13:50
 */
package br.com.locadora.view;

import br.com.locadora.conexao.InterfacePool;
import br.com.locadora.conexao.Pool;
import br.com.locadora.controller.SiscomController;
import br.com.locadora.model.bean.AcessoUsuario;
import br.com.locadora.model.bean.LogInfo;
import br.com.locadora.model.bean.Objeto;
import br.com.locadora.model.command.ConsultarCopia;
import br.com.locadora.model.dao.LogInfoDAO;
import br.com.locadora.model.dao.ObjetoDAO;
import br.com.locadora.model.dao.UsuarioDAO;
import br.com.locadora.util.ArquivoConfiguracao;
import br.com.locadora.util.ItemDbGrid;
import br.com.locadora.util.TemaInterface;
import static br.com.locadora.view.MenuObjeto.jtf_pesquisa;
import java.awt.event.KeyEvent;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

public class MenuObjeto extends javax.swing.JFrame {

    public String permissao;
    public InterfacePool pool;
    public SiscomController controller;
    public static List<Objeto> objetos = new ArrayList<Objeto>();
    public TelaPrincipal janelapai;
    public static Objeto objeto;
    public AcessoUsuario acesso;
    public CadastraAlteraObjeto cadastraAlteraObjeto;
    public ObjetoDAO objetoDAO;

    public MenuObjeto() {
        initComponents();
        TemaInterface.getInterface(this);
        cadastraAlteraObjeto = null;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jrb_codigo = new javax.swing.JRadioButton();
        jrb_elenco = new javax.swing.JRadioButton();
        jrb_titulo = new javax.swing.JRadioButton();
        jl_pesquisar_destino = new javax.swing.JLabel();
        jb_pesquisa = new javax.swing.JButton();
        jtf_pesquisa = new javax.swing.JTextField();
        jrb_diretor = new javax.swing.JRadioButton();
        jrb_sinopse = new javax.swing.JRadioButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jtbl_objeto = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jb_novo = new javax.swing.JButton();
        jb_alterar = new javax.swing.JButton();
        jb_excluir = new javax.swing.JButton();
        jb_sair = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Gerenciamento de Objetos");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formKeyPressed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Consulta Objeto"));
        jPanel1.setName("jPanel1"); // NOI18N
        jPanel1.setPreferredSize(new java.awt.Dimension(300, 24));

        buttonGroup1.add(jrb_codigo);
        jrb_codigo.setFont(new java.awt.Font("Helvetica Neue", 0, 13)); // NOI18N
        jrb_codigo.setText("Código");
        jrb_codigo.setName("jrb_codigo"); // NOI18N
        jrb_codigo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrb_codigoActionPerformed(evt);
            }
        });

        buttonGroup1.add(jrb_elenco);
        jrb_elenco.setFont(new java.awt.Font("Helvetica Neue", 0, 13)); // NOI18N
        jrb_elenco.setText("Elenco");
        jrb_elenco.setName("jrb_elenco"); // NOI18N
        jrb_elenco.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrb_elencoActionPerformed(evt);
            }
        });

        buttonGroup1.add(jrb_titulo);
        jrb_titulo.setFont(new java.awt.Font("Helvetica Neue", 0, 13)); // NOI18N
        jrb_titulo.setSelected(true);
        jrb_titulo.setText("Título");
        jrb_titulo.setName("jrb_titulo"); // NOI18N
        jrb_titulo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrb_tituloActionPerformed(evt);
            }
        });

        jl_pesquisar_destino.setFont(new java.awt.Font("Helvetica Neue", 0, 13)); // NOI18N
        jl_pesquisar_destino.setText("Parâmetro");
        jl_pesquisar_destino.setName("jl_pesquisar_destino"); // NOI18N

        jb_pesquisa.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        jb_pesquisa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/locadora/image/pesquisar.png"))); // NOI18N
        jb_pesquisa.setPreferredSize(new java.awt.Dimension(24, 24));
        jb_pesquisa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_pesquisaActionPerformed1(evt);
            }
        });
        jb_pesquisa.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jb_pesquisaKeyPressed(evt);
            }
        });

        jtf_pesquisa.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
        jtf_pesquisa.setName("jtf_pesquisa"); // NOI18N
        jtf_pesquisa.setPreferredSize(new java.awt.Dimension(300, 24));
        jtf_pesquisa.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtf_pesquisaKeyPressed(evt);
            }
        });

        buttonGroup1.add(jrb_diretor);
        jrb_diretor.setFont(new java.awt.Font("Helvetica Neue", 0, 13)); // NOI18N
        jrb_diretor.setText("Diretor");
        jrb_diretor.setName("jrb_diretor"); // NOI18N
        jrb_diretor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrb_diretorActionPerformed(evt);
            }
        });

        buttonGroup1.add(jrb_sinopse);
        jrb_sinopse.setText("Sinopse");
        jrb_sinopse.setName("jrb_sinopse"); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jtf_pesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jrb_titulo)
                        .addGap(0, 0, 0)
                        .addComponent(jrb_elenco)
                        .addGap(0, 0, 0)
                        .addComponent(jrb_diretor)
                        .addGap(0, 0, 0)
                        .addComponent(jrb_sinopse)
                        .addGap(0, 0, 0)
                        .addComponent(jrb_codigo))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jl_pesquisar_destino)
                        .addGap(247, 247, 247)
                        .addComponent(jb_pesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jrb_elenco)
                    .addComponent(jrb_diretor)
                    .addComponent(jrb_codigo)
                    .addComponent(jrb_sinopse))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jb_pesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(jrb_titulo)
                .addGap(0, 0, 0)
                .addComponent(jl_pesquisar_destino)
                .addGap(0, 0, 0)
                .addComponent(jtf_pesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jScrollPane3.setName("jScrollPane3"); // NOI18N

        jtbl_objeto.setUpdateSelectionOnSort(false);
        jtbl_objeto.setVerifyInputWhenFocusTarget(false);
        jtbl_objeto.setDefaultEditor(Object.class, null);
        jtbl_objeto.addMouseListener(new MouseAdapter() {
            public void mouseClicked(MouseEvent e){
                if(e.getClickCount() == 1){
                    //    listarItem();
                }}});
                jtbl_objeto.setFont(new java.awt.Font("Helvetica Neue", 0, 13)); // NOI18N
                jtbl_objeto.setModel(new javax.swing.table.DefaultTableModel(
                    new Object [][] {

                    },
                    new String [] {
                        "Código", "Descrição Objeto", "Título Original", "Elenco"
                    }
                ) {
                    Class[] types = new Class [] {
                        java.lang.String.class, java.lang.Object.class, java.lang.String.class, java.lang.String.class
                    };
                    boolean[] canEdit = new boolean [] {
                        false, false, false, false
                    };

                    public Class getColumnClass(int columnIndex) {
                        return types [columnIndex];
                    }

                    public boolean isCellEditable(int rowIndex, int columnIndex) {
                        return canEdit [columnIndex];
                    }
                });
                jtbl_objeto.setName("jtbl_objeto"); // NOI18N
                jtbl_objeto.getTableHeader().setReorderingAllowed(false);
                jtbl_objeto.addMouseListener(new java.awt.event.MouseAdapter() {
                    public void mouseClicked(java.awt.event.MouseEvent evt) {
                        jtbl_objetoMouseClicked(evt);
                    }
                });
                jtbl_objeto.addKeyListener(new java.awt.event.KeyAdapter() {
                    public void keyPressed(java.awt.event.KeyEvent evt) {
                        jtbl_objetoKeyPressed(evt);
                    }
                });
                jScrollPane3.setViewportView(jtbl_objeto);
                if (jtbl_objeto.getColumnModel().getColumnCount() > 0) {
                    jtbl_objeto.getColumnModel().getColumn(0).setPreferredWidth(10);
                    jtbl_objeto.getColumnModel().getColumn(1).setPreferredWidth(200);
                    jtbl_objeto.getColumnModel().getColumn(2).setPreferredWidth(200);
                    jtbl_objeto.getColumnModel().getColumn(3).setPreferredWidth(100);
                }

                jPanel2.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(204, 204, 204)));
                jPanel2.setName("jPanel2"); // NOI18N

                jb_novo.setFont(new java.awt.Font("Helvetica Neue", 0, 13)); // NOI18N
                jb_novo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/locadora/image/novo_registro.png"))); // NOI18N
                jb_novo.setText("Novo");
                jb_novo.setName("jb_novo"); // NOI18N
                jb_novo.setPreferredSize(new java.awt.Dimension(100, 40));
                jb_novo.addActionListener(new java.awt.event.ActionListener() {
                    public void actionPerformed(java.awt.event.ActionEvent evt) {
                        jb_novoActionPerformed(evt);
                    }
                });

                jb_alterar.setFont(new java.awt.Font("Helvetica Neue", 0, 13)); // NOI18N
                jb_alterar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/locadora/image/alterar_registro.png"))); // NOI18N
                jb_alterar.setText("Alterar");
                jb_alterar.setName("jb_alterar"); // NOI18N
                jb_alterar.setPreferredSize(new java.awt.Dimension(100, 40));
                jb_alterar.addActionListener(new java.awt.event.ActionListener() {
                    public void actionPerformed(java.awt.event.ActionEvent evt) {
                        jb_alterarActionPerformed(evt);
                    }
                });

                jb_excluir.setFont(new java.awt.Font("Helvetica Neue", 0, 13)); // NOI18N
                jb_excluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/locadora/image/delete 16.png"))); // NOI18N
                jb_excluir.setText("Excluir");
                jb_excluir.setName("jb_excluir"); // NOI18N
                jb_excluir.setPreferredSize(new java.awt.Dimension(100, 40));
                jb_excluir.addActionListener(new java.awt.event.ActionListener() {
                    public void actionPerformed(java.awt.event.ActionEvent evt) {
                        jb_excluirActionPerformed(evt);
                    }
                });

                jb_sair.setFont(new java.awt.Font("Helvetica Neue", 0, 13)); // NOI18N
                jb_sair.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/locadora/image/sair.png"))); // NOI18N
                jb_sair.setText("Sair");
                jb_sair.setName("jb_sair"); // NOI18N
                jb_sair.setPreferredSize(new java.awt.Dimension(100, 40));
                jb_sair.addActionListener(new java.awt.event.ActionListener() {
                    public void actionPerformed(java.awt.event.ActionEvent evt) {
                        jb_sairActionPerformed(evt);
                    }
                });
                jb_sair.addKeyListener(new java.awt.event.KeyAdapter() {
                    public void keyPressed(java.awt.event.KeyEvent evt) {
                        jb_sairKeyPressed(evt);
                    }
                });

                javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
                jPanel2.setLayout(jPanel2Layout);
                jPanel2Layout.setHorizontalGroup(
                    jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(160, 160, 160)
                        .addComponent(jb_novo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jb_alterar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jb_excluir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jb_sair, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(160, 160, 160))
                );
                jPanel2Layout.setVerticalGroup(
                    jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jb_novo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jb_excluir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jb_alterar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jb_sair, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                );

                jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
                jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/locadora/image/BROADWAY-LOGIN.png"))); // NOI18N
                jLabel2.setName("jLabel2"); // NOI18N

                javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
                getContentPane().setLayout(layout);
                layout.setHorizontalGroup(
                    layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane3)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 370, Short.MAX_VALUE)
                                .addGap(0, 0, 0)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 398, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(10, 10, 10))
                );
                layout.setVerticalGroup(
                    layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10))
                );

                pack();
                setLocationRelativeTo(null);
            }// </editor-fold>//GEN-END:initComponents

    private void jb_buscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_buscarActionPerformed

}//GEN-LAST:event_jb_buscarActionPerformed

    private void jb_novoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_novoActionPerformed
        pool = new Pool();
        UsuarioDAO usuarioControl = new UsuarioDAO(pool);
        ArquivoConfiguracao conf = new ArquivoConfiguracao();
        acesso = usuarioControl.permissaoInterface(conf.readPropertie("login"), "br.com.locadora.view.MenuObjeto");
        try {
            if (acesso.getEscrever() == true) {
                if (cadastraAlteraObjeto == null) {
                    cadastraAlteraObjeto = new CadastraAlteraObjeto();
                    cadastraAlteraObjeto.janelapai = this;
                    cadastraAlteraObjeto.setVisible(true);
                    this.setStatusTela(false);
                    cadastraAlteraObjeto.setTitle("Cadastrando Objeto");
                } else {
                    cadastraAlteraObjeto.setVisible(true);
                }
            } else {
                JOptionPane.showMessageDialog(null, "Usuário sem permissão. Consultar o administrador");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Usuário sem permissão. Consultar o administrador");
        }


}//GEN-LAST:event_jb_novoActionPerformed

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        retornarJanelaPai();
    }//GEN-LAST:event_formWindowClosed

    private void jb_pesquisaActionPerformed1(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_pesquisaActionPerformed1
        buscarDados();
    }//GEN-LAST:event_jb_pesquisaActionPerformed1

    private void jrb_codigoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrb_codigoActionPerformed
        jtf_pesquisa.requestFocus();
        // TODO add your handling code here:
    }//GEN-LAST:event_jrb_codigoActionPerformed

    private void jb_alterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_alterarActionPerformed
        alterar();

        // TODO add your handling code here:
    }//GEN-LAST:event_jb_alterarActionPerformed

    private void jb_excluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_excluirActionPerformed
        excluirObjeto();
        // TODO add your handling code here:
    }//GEN-LAST:event_jb_excluirActionPerformed

    private void jrb_tituloActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrb_tituloActionPerformed
        jtf_pesquisa.requestFocus();
        // TODO add your handling code here:
    }//GEN-LAST:event_jrb_tituloActionPerformed

    private void jtf_pesquisaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtf_pesquisaKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            jb_pesquisa.doClick();
        }
        acionarAtalho(evt);
        // TODO add your handling code here:
    }//GEN-LAST:event_jtf_pesquisaKeyPressed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        jtf_pesquisa.requestFocus();
        // TODO add your handling code here:
    }//GEN-LAST:event_formWindowOpened

    private void jrb_elencoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrb_elencoActionPerformed
        jtf_pesquisa.requestFocus();
        // TODO add your handling code here:
    }//GEN-LAST:event_jrb_elencoActionPerformed

    private void jtbl_objetoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtbl_objetoKeyPressed
        acionarAtalho(evt);
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            jb_alterar.doClick();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_jtbl_objetoKeyPressed

    private void jtbl_objetoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtbl_objetoMouseClicked
        if (evt.getClickCount() > 1) {
            jb_alterar.doClick();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_jtbl_objetoMouseClicked

    private void formKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyPressed
        acionarAtalho(evt);
        // TODO add your handling code here:
    }//GEN-LAST:event_formKeyPressed

    private void jb_sairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_sairActionPerformed
        retornarJanelaPai();
        // TODO add your handling code here:
    }//GEN-LAST:event_jb_sairActionPerformed

    private void jb_sairKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jb_sairKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jb_sairKeyPressed

    private void jb_pesquisaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jb_pesquisaKeyPressed
        acionarAtalho(evt);
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            buscarDados();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_jb_pesquisaKeyPressed

    private void jrb_diretorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrb_diretorActionPerformed
        jtf_pesquisa.requestFocus();
        // TODO add your handling code here:
    }//GEN-LAST:event_jrb_diretorActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new MenuObjeto().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JButton jb_alterar;
    private javax.swing.JButton jb_excluir;
    private javax.swing.JButton jb_novo;
    private javax.swing.JButton jb_pesquisa;
    private javax.swing.JButton jb_sair;
    private javax.swing.JLabel jl_pesquisar_destino;
    public static javax.swing.JRadioButton jrb_codigo;
    public static javax.swing.JRadioButton jrb_diretor;
    public static javax.swing.JRadioButton jrb_elenco;
    private javax.swing.JRadioButton jrb_sinopse;
    public static javax.swing.JRadioButton jrb_titulo;
    public static javax.swing.JTable jtbl_objeto;
    public static javax.swing.JTextField jtf_pesquisa;
    // End of variables declaration//GEN-END:variables

    public Objeto tbObjetoLinhaSelecionada(JTable tb) {
        if (tb != null && tb.getSelectedRow() != -1) {
            objeto = objetos.get(tb.getSelectedRow());
        } else {
            objeto = null;
        }
        return objeto;
    }

    
    public void buscarDados() {
        try {
            pool = new Pool();
            objetoDAO = new ObjetoDAO(pool);
            if (jrb_codigo.isSelected() == true) {
                if (!jtf_pesquisa.getText().equals("")) {
                    objetos = null;
                    objetos = objetoDAO.getObjeto_codigo(Integer.parseInt(jtf_pesquisa.getText().trim()));
                    
                    mostrar_Objeto(objetos);
                } else {
                    JOptionPane.showMessageDialog(null, "Informe um Código");
                }
            } else if (jrb_titulo.isSelected() == true) {
                objetos = null;
                objetos = objetoDAO.getObjeto_objeto(jtf_pesquisa.getText().trim());
                mostrar_Objeto(objetos);
            } else if (jrb_elenco.isSelected() == true) {
                objetos = null;
                objetos = objetoDAO.getObjeto_elenco(jtf_pesquisa.getText().trim());
                mostrar_Objeto(objetos);
            } else if (jrb_diretor.isSelected() == true) {
                objetos = null;
                objetos = objetoDAO.getObjeto_diretor(jtf_pesquisa.getText().trim());
                mostrar_Objeto(objetos);
            } else if (jrb_sinopse.isSelected() == true) {
                objetos = null;
                objetos = objetoDAO.getObjeto_sinopse(jtf_pesquisa.getText().trim());
                mostrar_Objeto(objetos);
            } 
            
            else {
                objetos = null;
                objetos = objetoDAO.getObjeto_elenco(MenuObjeto.jtf_pesquisa.getText().trim());
                mostrar_Objeto(objetos);
            }
        } catch (SQLException ex) {
            Logger.getLogger(ConsultarCopia.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }

    public void mostrar_Objeto(List<Objeto> objetos) {
        DefaultTableModel tableModel = (DefaultTableModel) MenuObjeto.jtbl_objeto.getModel();
        tableModel.setNumRows(0);
        
        if (objetos.size() > 0) {
            for (Objeto objeto1 : objetos) {
                DefaultTableModel row = (DefaultTableModel) MenuObjeto.jtbl_objeto.getModel();
                ItemDbGrid hashDbGrid = new ItemDbGrid(objeto1, objeto1.getTitulo());
                row.addRow(new Object[]{objeto1.getCodigo_objeto(), hashDbGrid, objeto1.getTitulo_original(), objeto1.getElenco()});                                
            }
            this.objetos = objetos;
            
            jtbl_objeto.requestFocus();
            jtbl_objeto.setSelectionMode(1);
        } else {
            JOptionPane.showMessageDialog(null, "Nenhum Objeto encontrado");
        }
    }

    public void setStatusTela(boolean status) {

        if (status) {
            this.setVisible(status);
        }
        this.setEnabled(status);

    }

    private void excluirObjeto() {
        pool = new Pool();
        UsuarioDAO usuarioControl = new UsuarioDAO(pool);
        ArquivoConfiguracao conf = new ArquivoConfiguracao();
        acesso = usuarioControl.permissaoInterface(conf.readPropertie("login"), "br.com.locadora.view.MenuObjeto");

        try {
            if (acesso.getDeletar() == true) {
                DefaultTableModel row = (DefaultTableModel) jtbl_objeto.getModel();
                if (jtbl_objeto.getSelectedRow() != -1) {
                    int selectedOption = JOptionPane.showConfirmDialog(this, "Deseja excluir ?", "Atenção", JOptionPane.YES_NO_OPTION);
                    if (selectedOption == JOptionPane.YES_NO_OPTION) {
                        pool = new Pool();
                        ObjetoDAO objetoDAO = new ObjetoDAO(pool);
                        objeto = objetos.get(jtbl_objeto.getSelectedRow());                        

                        try {
                            objetoDAO.excluir(objeto.getCodigo_objeto());
                            row.removeRow(jtbl_objeto.getSelectedRow());
                            
                            LogInfo logInfo = new LogInfo();
                            logInfo.setDescricao("Excluir Objeto -> " + objeto.getTitulo());
                            logInfo.setUsuario(acesso.getUsuario());
                            pool = new Pool();
                            LogInfoDAO logInfoDAO = new LogInfoDAO(pool);
                            logInfoDAO.salvar(logInfo);                                                
                        } catch (SQLException ex) {
                            JOptionPane.showMessageDialog(null, "Este registro não pode ser excluído pois está referenciado em outra tabela");
                        }

                    }
                } else {
                    JOptionPane.showMessageDialog(null, "Selecione um Objeto");
                }
            } else {
                JOptionPane.showMessageDialog(null, "Usuário sem permissão. Consultar o administrador");
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Usuário sem permissão. Consultar o administrador");
        }
    }

    public void acionarAtalho(java.awt.event.KeyEvent evt) {

        if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
            retornarJanelaPai();
        }
        if (evt.getKeyCode() == KeyEvent.VK_DELETE) {
            jb_excluir.doClick();
        }
        if (evt.getKeyCode() == KeyEvent.VK_F5) {
            jtf_pesquisa.requestFocus();
        }
        if (evt.getKeyCode() == KeyEvent.VK_F2) {
            jb_novo.doClick();
        }
    }

    private void alterar() {
        pool = new Pool();
        UsuarioDAO usuarioControl = new UsuarioDAO(pool);
        ArquivoConfiguracao conf = new ArquivoConfiguracao();
        acesso = usuarioControl.permissaoInterface(conf.readPropertie("login"), "br.com.locadora.view.MenuObjeto");

        try {
            if (acesso.getEscrever() == true) {
                objeto = tbObjetoLinhaSelecionada(jtbl_objeto);
                if (objeto != null) {

                    if (cadastraAlteraObjeto == null) {
                        cadastraAlteraObjeto = new CadastraAlteraObjeto(objeto);
                        cadastraAlteraObjeto.janelapai = this;
                        cadastraAlteraObjeto.setVisible(true);
                        this.setStatusTela(false);                        
                        cadastraAlteraObjeto.acesso = acesso;
                    } else {
                        cadastraAlteraObjeto.setVisible(true);
                    }

                } else {
                    JOptionPane.showMessageDialog(null, "Selecione um Objeto");
                    jtf_pesquisa.requestFocus();
                }

            } else {
                JOptionPane.showMessageDialog(null, "Usuário sem permissão. Consultar o administrador");
            }
        } catch (Exception ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(null, "Usuário sem permissão. Consultar o administrador");
        }
    }

    public void retornarJanelaPai() {
        setVisible(false);
        if (janelapai != null) {
            janelapai.setStatusTela(true);
        }
    }
}
