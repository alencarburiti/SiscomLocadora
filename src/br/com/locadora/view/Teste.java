/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.locadora.view;

import br.com.locadora.conexao.InterfacePool;
import br.com.locadora.conexao.Pool;
import br.com.locadora.model.bean.Categoria;
import br.com.locadora.model.bean.SubCategoria;
import br.com.locadora.model.dao.CategoriaDAO;
import br.com.locadora.util.ItemDbGrid;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JTree;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.TreeModel;
import javax.swing.tree.TreePath;

/**
 *
 * @author alencarburiti
 */
public class Teste extends javax.swing.JFrame {

    public InterfacePool pool;
    public CategoriaDAO categoriaDAO;
    public List<Categoria> categorias;
    public List<SubCategoria> subCategorias;

    /**
     * Creates new form Teste
     */
    public Teste() {
        initComponents();
        mostrarNodes();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        arvore = new javax.swing.JTree();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.tree.DefaultMutableTreeNode treeNode1 = new javax.swing.tree.DefaultMutableTreeNode("root");
        arvore.setModel(new javax.swing.tree.DefaultTreeModel(treeNode1));
        arvore.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                arvoreMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(arvore);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(209, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(19, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void arvoreMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_arvoreMouseClicked

        if (!arvore.isSelectionEmpty()) {

            DefaultMutableTreeNode node = (DefaultMutableTreeNode) arvore.getLastSelectedPathComponent();
            System.out.println("Level " + node.getLevel());
            System.out.println("Level " + node.toString());
            if (node.getLevel() == 1) {
                pool = new Pool();
                categoriaDAO = new CategoriaDAO(pool);
                categorias = new ArrayList<>();
                categorias = categoriaDAO.getCategoria(node.toString());

//                JOptionPane.showMessageDialog(null, categorias.get(0).getDescricao()+ categorias.get(0).getCodigo_categoria());                
            }

//            int row = 0;
//            while (row < arvore.getRowCount()) {
//                arvore.expandRow(row);
//                arvore.setSelectionPath(arvore.getPathForRow(row));
//                System.out.println("Linha " + row);
//                row++;
//            }
//
//            TreePath path = arvore.getSelectionPath();
//            int level = path.getPathCount();
//            System.out.println("Level: " + level);
//
//            if (level == 2) {
//
//            }
//            ItemDbGrid hashDbGrid = (ItemDbGrid) arvore.getLastSelectedPathComponent();
//            Categoria categorira = (Categoria) hashDbGrid.getObjeto();
//            System.out.println("Categoria: " + categorira.getDescricao());
//
//            DefaultMutableTreeNode no = (DefaultMutableTreeNode) arvore.getLastSelectedPathComponent();
//
//            JOptionPane.showMessageDialog(null,
//                    "Texto do Ã­tem selecionado: " + no.toString(),
//                    "JTree", JOptionPane.INFORMATION_MESSAGE);
        }

//            adicionarItemLocado(copiaAtendimento, diariaCombo);
        // TODO add your handling code here:
    }//GEN-LAST:event_arvoreMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Teste.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Teste.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Teste.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Teste.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Teste().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTree arvore;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables

//    private void criarNodes() {
//
//        DefaultMutableTreeNode top = new DefaultMutableTreeNode("Categorias");
//
//        pool = new Pool();
//        categoriaDAO = new CategoriaDAO(pool);
//        categorias = new ArrayList<>();
//        categorias = categoriaDAO.getCategoria();
//
//        DefaultMutableTreeNode dmt_categoria;
//        DefaultMutableTreeNode dmt_sub_categoria;
//        if (!categorias.isEmpty()) {
//
//            for (int i = 0; i < categorias.size(); i++) {
//                ItemDbGrid hashDbGrid = new ItemDbGrid(categorias.get(i), categorias.get(i).getDescricao());
//                dmt_categoria = new DefaultMutableTreeNode(hashDbGrid);
//                pool = new Pool();
//                categoriaDAO = new CategoriaDAO(pool);
//                subCategorias = new ArrayList<>();
//                subCategorias = categoriaDAO.getSubCategoria(categorias.get(i));
//                {
//                    if (!subCategorias.isEmpty()) {
//                        for (int p = 0; p < subCategorias.size(); p++) {
//                            ItemDbGrid hashDbGridSub = new ItemDbGrid(subCategorias.get(p), subCategorias.get(p).getDescricao());
//                            dmt_sub_categoria = new DefaultMutableTreeNode(hashDbGridSub);
//
//                            dmt_categoria.add(dmt_sub_categoria);
//                        }
//
//                    } else {
//                    }
//                }
//                top.add(dmt_categoria);
//            }
//        } else {
//        }
//
//        arvore.setModel(new javax.swing.tree.DefaultTreeModel(top));
//    }
    private void mostrarNodes() {

        DefaultMutableTreeNode top = new DefaultMutableTreeNode("Categorias");

        pool = new Pool();
        categoriaDAO = new CategoriaDAO(pool);
        categorias = new ArrayList<>();
        categorias = categoriaDAO.getCategoria();

        DefaultMutableTreeNode dmt_categoria;

        if (!categorias.isEmpty()) {

            for (int i = 0; i < categorias.size(); i++) {
                ItemDbGrid hashDbGrid = new ItemDbGrid(categorias.get(i), categorias.get(i).getDescricao());
                dmt_categoria = new DefaultMutableTreeNode(hashDbGrid);
                top.add(dmt_categoria);
            }
        } else {
        }

        arvore.setModel(new javax.swing.tree.DefaultTreeModel(top));
    }
}
