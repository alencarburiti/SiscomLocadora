/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * MenuDiaria.java
 *
 * Created on 02/06/2011, 00:56:52
 */
package br.com.locadora.view;

import br.com.locadora.conexao.InterfacePool;
import br.com.locadora.conexao.Pool;
import br.com.locadora.model.bean.Feriado;
import br.com.locadora.model.dao.DependenteDAO;
import br.com.locadora.model.dao.FeriadoDAO;
import br.com.locadora.util.Data;
import br.com.locadora.util.LimitadorTexto;
import br.com.locadora.util.TemaInterface;
import java.awt.Color;
import java.awt.event.KeyEvent;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.List;
import javax.swing.JFormattedTextField;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.MaskFormatter;

/**
 *
 * @author ALENCAR
 */
public class ConfiguraFeriado extends javax.swing.JFrame {

    public TelaPrincipal janelapai;
    public InterfacePool pool;
    public MaskFormatter formatoData;
    public FeriadoDAO feriadoDAO;
    public List<Feriado> feriados;
    public Feriado feriadoAlterar;
    public String action = "salvar";

    /**
     * Creates new form DiariaGUI
     */
    public ConfiguraFeriado() {
        initComponents();
        TemaInterface.getInterface(this);
        janelapai = null;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jtf_descricao = new javax.swing.JTextField(new LimitadorTexto(50), "",10);
        jLabel22 = new javax.swing.JLabel();
        try  {
            formatoData = new MaskFormatter("##/##/####");
        }
        catch (Exception erro)
        {
            JOptionPane.showMessageDialog(null,"Não foi possivel setar");
        }
        jtf_data_feriado = new JFormattedTextField(formatoData);
        jb_adicionar = new javax.swing.JButton();
        jb_eliminar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtbl_feriado = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jb_sair = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Configurar Feriados");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formKeyPressed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Feriados"));
        jPanel1.setName("jPanel1"); // NOI18N

        jLabel1.setFont(new java.awt.Font("Helvetica Neue", 0, 13)); // NOI18N
        jLabel1.setText("Descrição");
        jLabel1.setName("jLabel1"); // NOI18N

        jtf_descricao.setFont(new java.awt.Font("Helvetica Neue", 0, 13)); // NOI18N
        jtf_descricao.setName("jtf_descricao"); // NOI18N
        jtf_descricao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtf_descricaoActionPerformed(evt);
            }
        });
        jtf_descricao.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtf_descricaoFocusLost(evt);
            }
        });
        jtf_descricao.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtf_descricaoKeyPressed(evt);
            }
        });

        jLabel22.setFont(new java.awt.Font("Helvetica Neue", 0, 13)); // NOI18N
        jLabel22.setText("Data Feriado*");
        jLabel22.setName("jLabel22"); // NOI18N

        jtf_data_feriado.setFont(new java.awt.Font("Helvetica Neue", 0, 13)); // NOI18N
        jtf_data_feriado.setName("jtf_data_feriado"); // NOI18N
        jtf_data_feriado.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtf_data_feriadoFocusLost(evt);
            }
        });
        jtf_data_feriado.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtf_data_feriadoKeyPressed(evt);
            }
        });

        jb_adicionar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/locadora/image/adicionar_item.png"))); // NOI18N
        jb_adicionar.setToolTipText("Incluir");
        jb_adicionar.setName("jb_adicionar"); // NOI18N
        jb_adicionar.setPreferredSize(new java.awt.Dimension(24, 24));
        jb_adicionar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jb_adicionarMouseClicked(evt);
            }
        });
        jb_adicionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_adicionarActionPerformed(evt);
            }
        });
        jb_adicionar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jb_adicionarKeyPressed(evt);
            }
        });

        jb_eliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/locadora/image/remove_item.png"))); // NOI18N
        jb_eliminar.setToolTipText("Excluir");
        jb_eliminar.setName("jb_eliminar"); // NOI18N
        jb_eliminar.setPreferredSize(new java.awt.Dimension(24, 24));
        jb_eliminar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jb_eliminarMouseClicked(evt);
            }
        });
        jb_eliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_eliminarActionPerformed(evt);
            }
        });
        jb_eliminar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jb_eliminarKeyPressed(evt);
            }
        });

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        jtbl_feriado.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Descrição", "Data Feriado"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtbl_feriado.setName("jtbl_feriado"); // NOI18N
        jtbl_feriado.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtbl_feriadoMouseClicked(evt);
            }
        });
        jtbl_feriado.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtbl_feriadoKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(jtbl_feriado);
        if (jtbl_feriado.getColumnModel().getColumnCount() > 0) {
            jtbl_feriado.getColumnModel().getColumn(0).setPreferredWidth(100);
            jtbl_feriado.getColumnModel().getColumn(1).setPreferredWidth(40);
        }

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel22)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jtf_data_feriado, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jb_adicionar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(5, 5, 5)
                        .addComponent(jb_eliminar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel1)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jtf_descricao, javax.swing.GroupLayout.DEFAULT_SIZE, 261, Short.MAX_VALUE))
                .addGap(0, 0, 0))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addGap(0, 0, 0)
                .addComponent(jtf_descricao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jLabel22)
                .addGap(0, 0, 0)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jb_adicionar, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jb_eliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtf_data_feriado, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, 0)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 259, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(204, 204, 204)));
        jPanel2.setName("jPanel2"); // NOI18N

        jb_sair.setFont(new java.awt.Font("Helvetica Neue", 0, 13)); // NOI18N
        jb_sair.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/locadora/image/sair.png"))); // NOI18N
        jb_sair.setText("Sair");
        jb_sair.setName("jb_sair"); // NOI18N
        jb_sair.setPreferredSize(new java.awt.Dimension(100, 40));
        jb_sair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_sairActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(85, 85, 85)
                .addComponent(jb_sair, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(85, 85, 85))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jb_sair, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 273, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, 0)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        retornaJanelaPai();
    }//GEN-LAST:event_formWindowClosed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        mostrarFeriados();
        // TODO add your handling code here:
    }//GEN-LAST:event_formWindowOpened

    private void jb_sairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_sairActionPerformed
        retornaJanelaPai();
        // TODO add your handling code here:
    }//GEN-LAST:event_jb_sairActionPerformed

    private void formKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyPressed
        acionarAtalho(evt);
        // TODO add your handling code here:
    }//GEN-LAST:event_formKeyPressed

    private void jb_eliminarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jb_eliminarKeyPressed
        acionarAtalho(evt);
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (action.equals("salvar")) {
                removeFeriado(jtbl_feriado);
            } else if (action.equals("alterar")) {
                jb_adicionar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/locadora/image/adicionar_item.png")));
                jb_eliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/locadora/image/remove_item.png"))); // NOI18N

                jtf_descricao.setText("");
                jtf_descricao.requestFocus();
                jtf_data_feriado.setText("");
            }
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_jb_eliminarKeyPressed

    private void jb_eliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_eliminarActionPerformed
        removeFeriado(jtbl_feriado);
        // TODO add your handling code here:
    }//GEN-LAST:event_jb_eliminarActionPerformed

    private void jb_eliminarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jb_eliminarMouseClicked
        if (evt.getClickCount() == 1) {
            if (action.equals("salvar")) {
                removeFeriado(jtbl_feriado);
            } else if (action.equals("alterar")) {
                jb_adicionar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/locadora/image/edit_add.png")));
                jb_eliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/locadora/image/edit_remove.png"))); // NOI18N

                jtf_descricao.setText("");
                jtf_descricao.requestFocus();
                jtf_data_feriado.setText("");
            }
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_jb_eliminarMouseClicked

    private void jb_adicionarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jb_adicionarKeyPressed
        acionarAtalho(evt);
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            adicionarFeriado();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_jb_adicionarKeyPressed

    private void jb_adicionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_adicionarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jb_adicionarActionPerformed

    private void jb_adicionarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jb_adicionarMouseClicked
        if (evt.getClickCount() == 1) {
            adicionarFeriado();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_jb_adicionarMouseClicked

    private void jtf_data_feriadoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtf_data_feriadoKeyPressed
        acionarAtalho(evt);
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            jb_adicionar.requestFocus();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_jtf_data_feriadoKeyPressed

    private void jtf_data_feriadoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtf_data_feriadoFocusLost
        try {
            Data data = new Data();

            if (jtf_data_feriado.getText().trim().length() < 10) {
                jtf_data_feriado.setForeground(Color.red);
            } else if (jtf_data_feriado.getText().equals("  /  /    ")) {
                jtf_data_feriado.setForeground(Color.red);
            } else {
                if (validaData(jtf_data_feriado.getText())) {
                    jtf_data_feriado.setForeground(Color.black);
                } else {
                    jtf_data_feriado.setForeground(Color.red);
                }
            }
        } catch (ParseException ex) {
            jtf_data_feriado.setForeground(Color.red);
        } catch (NumberFormatException ex) {
            jtf_data_feriado.setText("  /  /    ");
            jtf_data_feriado.setForeground(Color.red);
        }
    }//GEN-LAST:event_jtf_data_feriadoFocusLost

    private void jtf_descricaoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtf_descricaoKeyPressed
        acionarAtalho(evt);
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            jtf_data_feriado.requestFocus();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_jtf_descricaoKeyPressed

    private void jtf_descricaoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtf_descricaoFocusLost

        // TODO add your handling code here:
    }//GEN-LAST:event_jtf_descricaoFocusLost

    private void jtf_descricaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtf_descricaoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtf_descricaoActionPerformed

    private void jtbl_feriadoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtbl_feriadoKeyPressed
        acionarAtalho(evt);
        // TODO add your handling code here:
    }//GEN-LAST:event_jtbl_feriadoKeyPressed

    private void jtbl_feriadoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtbl_feriadoMouseClicked
        if (evt.getClickCount() > 1) {
            alterarFeriado();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_jtbl_feriadoMouseClicked
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new ConfiguraFeriado().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jb_adicionar;
    private javax.swing.JButton jb_eliminar;
    private javax.swing.JButton jb_sair;
    private javax.swing.JTable jtbl_feriado;
    public static javax.swing.JFormattedTextField jtf_data_feriado;
    public static javax.swing.JTextField jtf_descricao;
    // End of variables declaration//GEN-END:variables

    public void mostrarFeriados() {
        DefaultTableModel tableModel = (DefaultTableModel) jtbl_feriado.getModel();
        tableModel.setNumRows(0);

        feriados = new ArrayList<>();
        pool = new Pool();
        feriadoDAO = new FeriadoDAO(pool);
        feriados = feriadoDAO.getFeriado();

        if (feriados.size() > 0) {

            for (int i = 0; i < feriados.size(); i++) {

                SimpleDateFormat in = new SimpleDateFormat("yyyy-MM-dd");
                SimpleDateFormat out = new SimpleDateFormat("dd/MM/yyyy");
                String data_feriado = null;
                try {
                    data_feriado = out.format(in.parse(feriados.get(i).getData_feriado().toString()));
                } catch (ParseException ex) {

                }
                DefaultTableModel row = (DefaultTableModel) jtbl_feriado.getModel();

                row.addRow(new Object[]{feriados.get(i).getDescricao(), data_feriado});
            }
        } else {
            JOptionPane.showMessageDialog(null, "Nenhum Feriado encontrado.");

        }

    }

    public void acionarAtalho(java.awt.event.KeyEvent evt) {
        if (evt.getKeyCode() == KeyEvent.VK_F10) {

        }
        if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
            retornaJanelaPai();
        }
    }

    private void retornaJanelaPai() {
        setVisible(false);
        if (janelapai != null) {
            janelapai.setStatusTela(true);
        }
    }

    public void adicionarFeriado() {
        try {
            if (vericarCampos() == true) {
                Feriado feriado = new Feriado();
                feriado.setDescricao(jtf_descricao.getText());
                feriado.setData_feriado(new SimpleDateFormat("dd/MM/yyyy").parse((String) jtf_data_feriado.getText()));

                pool = new Pool();
                feriadoDAO = new FeriadoDAO(pool);
                if (action.equals("salvar")) {
                    feriadoDAO.salvar(feriado);
                } else if (action.equals("alterar")) {
                    feriado.setCodigo_feriado(feriadoAlterar.getCodigo_feriado());
                    feriadoDAO.atualizar(feriado);
                    jb_adicionar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/locadora/image/adicionar_item.png"))); // NOI18N                        
                    jb_eliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/locadora/image/remove_item.png"))); // NOI18N
                    action = "salvar";
                }

                mostrarFeriados();
                jtf_descricao.requestFocus();
                jtf_descricao.setText("");
                jtf_data_feriado.setText("");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Não foi possível configurar feriado");
        }
    }

    public static boolean validaData(String dataString) throws java.text.ParseException {

        if (!dataString.equals("")) {

            DateFormat df = new SimpleDateFormat("dd/MM/yyyy");
            Calendar cal = new GregorianCalendar();
            Date dataDigitada = new Date(df.parse(dataString).getTime());
            Date dataAtual = new Date(System.currentTimeMillis());

            // gerando o calendar
            cal.setTime(df.parse(dataString));

            // separando os dados da string para comparacao e validacao
            String[] data = dataString.split("/");
            String dia = data[0];
            String mes = data[1];
            String ano = data[2];

            // testando se hah discrepancia entre a data que foi
            // inserida no caledar e a data que foi passada como
            // string. se houver diferenca, a data passada era
            // invalida
            if ((new Integer(dia)).intValue() != (new Integer(cal.get(Calendar.DAY_OF_MONTH))).intValue()) {
                // dia nao casou
                return (false);
            }
            if ((new Integer(mes)).intValue() != (new Integer(cal.get(Calendar.MONTH) + 1)).intValue()) {
                // mes nao casou

                return (false);
            }
            if ((new Integer(ano)).intValue() != (new Integer(cal.get(Calendar.YEAR))).intValue()) {
                // ano nao casou

                return (false);
            }
            return (true);
        }
        return false;
    }

    public boolean vericarCampos() {
        String msgERRO = "Preencha os campos obrigatórios:\n";

        if (jtf_descricao.getText().equals("")) {
            msgERRO = msgERRO + " *Descrição\n";
        }

        try {

            if (jtf_data_feriado.getText().trim().length() != 10) {
                jtf_data_feriado.setForeground(Color.red);
                msgERRO = msgERRO + " *Data de Nascimento inválida\n";
            } else if (jtf_data_feriado.getText().equals("  /  /    ")) {
                jtf_data_feriado.setForeground(Color.red);
                msgERRO = msgERRO + " *Data de Nascimento inválida\n";
            } else {
                if (validaData(jtf_data_feriado.getText())) {
                    jtf_data_feriado.setForeground(Color.black);
                } else {
                    jtf_data_feriado.setForeground(Color.red);
                    msgERRO = msgERRO + " *Data de Feriado inválida\n";
                }

            }
        } catch (ParseException ex) {
            jtf_data_feriado.setForeground(Color.red);
            msgERRO = msgERRO + " *Data de Nascimento inválida\n";
        } catch (NumberFormatException ex) {
            jtf_data_feriado.setText("  /  /    ");
            jtf_data_feriado.setForeground(Color.red);
            msgERRO = msgERRO + " *Data de Nascimento inválida\n";
        }
        if (!msgERRO.equals("Preencha os campos obrigatórios:\n")) {
            JOptionPane.showMessageDialog(this, msgERRO);
            jtf_descricao.requestFocus();
            return false;
        } else {
            return true;
        }
    }

    public void alterarFeriado() {
        if (jtbl_feriado.getRowCount() != -1) {
            feriadoAlterar = feriados.get(jtbl_feriado.getSelectedRow());
            jtf_descricao.setText(feriados.get(jtbl_feriado.getSelectedRow()).getDescricao());

            SimpleDateFormat in = new SimpleDateFormat("yyyy-MM-dd");
            SimpleDateFormat out = new SimpleDateFormat("dd/MM/yyyy");
            String data_feriado = null;
            try {
                data_feriado = out.format(in.parse(feriados.get(jtbl_feriado.getSelectedRow()).getData_feriado().toString()));
            } catch (ParseException ex) {

            }
            jtf_data_feriado.setText(data_feriado);

            jb_adicionar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/locadora/image/alterar_registro.png"))); // NOI18N
            jb_eliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/locadora/image/sair.png"))); // NOI18N
            action = "alterar";
            jtf_descricao.requestFocus();
        }

    }

    public void removeFeriado(JTable tb) {
        if (tb != null) {
            DefaultTableModel row = (DefaultTableModel) tb.getModel();

            if (tb.getSelectedRow() != -1) {
                int selectedOption = JOptionPane.showConfirmDialog(this, "Deseja excluir ?", "Atenção", JOptionPane.YES_NO_OPTION);
                if (selectedOption == JOptionPane.YES_NO_OPTION) {
                    pool = new Pool();
                    feriadoDAO = new FeriadoDAO(pool);

                    if (feriadoDAO.excluir(feriados.get(tb.getSelectedRow()).getCodigo_feriado())) {
                        row.removeRow(tb.getSelectedRow());
                        mostrarFeriados();
                        
                    }
                }
            } else {
                JOptionPane.showMessageDialog(null, "Selecione um Dependente");
            }

        }
    }
}
