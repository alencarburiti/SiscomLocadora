package br.com.locadora.view;

import br.com.locadora.conexao.InterfacePool;
import br.com.locadora.conexao.Pool;
import br.com.locadora.model.bean.AcessoUsuario;
import br.com.locadora.model.bean.Diaria;
import br.com.locadora.model.bean.ItemCombo;
import br.com.locadora.model.bean.Combo;
import br.com.locadora.model.bean.LogInfo;
import br.com.locadora.model.dao.ComboDAO;
import br.com.locadora.model.dao.LogInfoDAO;
import br.com.locadora.util.LimitadorTexto;
import br.com.locadora.util.Moeda;
import br.com.locadora.util.TemaInterface;
import java.awt.event.KeyEvent;
import java.sql.SQLException;
import java.text.ParseException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ALENCAR
 */
public final class CadastraAlteraCombo extends javax.swing.JFrame {

    private Combo combo;
    private List<ItemCombo> itensCombo;
    private ItemCombo itemCombo;
    public MenuCombo janelapai;
    public ConsultaDiaria janelapai2;
    private InterfacePool pool;
    public String action;
    public AcessoUsuario acesso;
    public Moeda moeda;
    public Diaria diaria;
    public ComboDAO comboDAO;
    public ConsultaDiaria consultaDiaria;

    /**
     * Creates new form ProdutoCadastroGUI
     */
    public CadastraAlteraCombo() {
        initComponents();
        TemaInterface.getInterface(this);
        this.setTitle("Cadastrando Combo");
        janelapai = null;
        janelapai2 = null;
        consultaDiaria = null;
    }

    public CadastraAlteraCombo(Combo combo) {
        initComponents();
        if (combo != null) {
            TemaInterface.getInterface(this);
            this.setTitle("Alterando Combo");
            janelapai = null;
            janelapai2 = null;
            consultaDiaria = null;
            this.combo = combo;
            moeda = new Moeda();
            jtf_codigo_pacote_promocional.setText(combo.getCodigo_combo().toString());
            jtf_descricao_pacote.setText(combo.getDescricao());
            jtf_quantidade_troca_mes.setText(combo.getQuantidade_troca().toString());
            jtf_dias_combo.setText(combo.getDias_combo().toString());

            jtf_valor.setText(moeda.setPrecoFormat(combo.getValor().toString()));

            System.out.println("Status: " + combo.getStatus());
            if (combo.getStatus() == true) {
                jrb_ativo.setSelected(true);
            } else {
                jrb_inativo.setSelected(true);
            }
            carregarItensPacotePromocional(combo.getCodigo_combo());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tfa_similar = new javax.swing.JTextArea();
        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jb_sair = new javax.swing.JButton();
        jb_salvar = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jtf_codigo_pacote_promocional = new javax.swing.JTextField();
        jtf_descricao_pacote = new javax.swing.JTextField(new LimitadorTexto(50), "",10);
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jrb_ativo = new javax.swing.JRadioButton();
        jrb_inativo = new javax.swing.JRadioButton();
        jLabel18 = new javax.swing.JLabel();
        jb_adicionar = new javax.swing.JButton();
        jb_remover = new javax.swing.JButton();
        jScrollPane6 = new javax.swing.JScrollPane();
        jtbl_diarias_pacote = new javax.swing.JTable();
        jLabel41 = new javax.swing.JLabel();
        jtf_descricao_diaria = new javax.swing.JTextField();
        jb_pesquisa_diaria = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jtf_valor = new javax.swing.JTextField(new LimitadorTexto(10), "",10);
        jtf_quantidade_troca_mes = new javax.swing.JFormattedTextField();
        jtf_dias_combo = new javax.swing.JFormattedTextField();

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        tfa_similar.setColumns(20);
        tfa_similar.setRows(5);
        tfa_similar.setName("tfa_similar"); // NOI18N
        jScrollPane1.setViewportView(tfa_similar);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Alterando Cliente");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formKeyPressed(evt);
            }
        });

        jb_sair.setFont(new java.awt.Font("Helvetica Neue", 0, 13)); // NOI18N
        jb_sair.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/locadora/image/sair.png"))); // NOI18N
        jb_sair.setText("Sair");
        jb_sair.setMaximumSize(new java.awt.Dimension(101, 33));
        jb_sair.setName("jb_sair"); // NOI18N
        jb_sair.setPreferredSize(new java.awt.Dimension(100, 40));
        jb_sair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_sairActionPerformed(evt);
            }
        });
        jb_sair.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jb_sairKeyPressed(evt);
            }
        });

        jb_salvar.setFont(new java.awt.Font("Helvetica Neue", 0, 13)); // NOI18N
        jb_salvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/locadora/image/save.png"))); // NOI18N
        jb_salvar.setText("Salvar");
        jb_salvar.setName("jb_salvar"); // NOI18N
        jb_salvar.setPreferredSize(new java.awt.Dimension(100, 40));
        jb_salvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_salvarActionPerformed(evt);
            }
        });
        jb_salvar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jb_salvarKeyPressed(evt);
            }
        });

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Combo"));
        jPanel3.setName("jPanel3"); // NOI18N

        jtf_codigo_pacote_promocional.setEditable(false);
        jtf_codigo_pacote_promocional.setFont(new java.awt.Font("Helvetica Neue", 0, 13)); // NOI18N
        jtf_codigo_pacote_promocional.setName("jtf_codigo_pacote_promocional"); // NOI18N

        jtf_descricao_pacote.setFont(new java.awt.Font("Helvetica Neue", 0, 13)); // NOI18N
        jtf_descricao_pacote.setName("jtf_descricao_pacote"); // NOI18N
        jtf_descricao_pacote.setPreferredSize(new java.awt.Dimension(300, 24));
        jtf_descricao_pacote.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtf_descricao_pacoteActionPerformed(evt);
            }
        });
        jtf_descricao_pacote.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtf_descricao_pacoteKeyPressed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Helvetica Neue", 0, 13)); // NOI18N
        jLabel1.setText("Código Combo");
        jLabel1.setName("jLabel1"); // NOI18N

        jLabel3.setFont(new java.awt.Font("Helvetica Neue", 0, 13)); // NOI18N
        jLabel3.setText("Descrição* ");
        jLabel3.setName("jLabel3"); // NOI18N

        jLabel12.setFont(new java.awt.Font("Helvetica Neue", 0, 13)); // NOI18N
        jLabel12.setText("Qtd Troca");
        jLabel12.setName("jLabel12"); // NOI18N

        buttonGroup1.add(jrb_ativo);
        jrb_ativo.setFont(new java.awt.Font("Helvetica Neue", 0, 13)); // NOI18N
        jrb_ativo.setSelected(true);
        jrb_ativo.setText("Ativo");
        jrb_ativo.setName("jrb_ativo"); // NOI18N
        jrb_ativo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrb_ativoActionPerformed(evt);
            }
        });

        buttonGroup1.add(jrb_inativo);
        jrb_inativo.setFont(new java.awt.Font("Helvetica Neue", 0, 13)); // NOI18N
        jrb_inativo.setText("Inativo");
        jrb_inativo.setName("jrb_inativo"); // NOI18N

        jLabel18.setFont(new java.awt.Font("Helvetica Neue", 0, 13)); // NOI18N
        jLabel18.setText("Dias Combo*");
        jLabel18.setName("jLabel18"); // NOI18N

        jb_adicionar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/locadora/image/adicionar_item.png"))); // NOI18N
        jb_adicionar.setToolTipText("Incluir");
        jb_adicionar.setName("jb_adicionar"); // NOI18N
        jb_adicionar.setPreferredSize(new java.awt.Dimension(24, 24));
        jb_adicionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_adicionarActionPerformed(evt);
            }
        });
        jb_adicionar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jb_adicionarKeyPressed(evt);
            }
        });

        jb_remover.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/locadora/image/remove_item.png"))); // NOI18N
        jb_remover.setToolTipText("Excluir");
        jb_remover.setName("jb_remover"); // NOI18N
        jb_remover.setPreferredSize(new java.awt.Dimension(24, 24));
        jb_remover.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_removerActionPerformed(evt);
            }
        });
        jb_remover.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jb_removerKeyPressed(evt);
            }
        });

        jScrollPane6.setName("jScrollPane6"); // NOI18N

        jtbl_diarias_pacote.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Descrição Diária"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtbl_diarias_pacote.setName("jtbl_diarias_pacote"); // NOI18N
        jtbl_diarias_pacote.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtbl_diarias_pacoteMouseClicked(evt);
            }
        });
        jtbl_diarias_pacote.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtbl_diarias_pacoteKeyPressed(evt);
            }
        });
        jScrollPane6.setViewportView(jtbl_diarias_pacote);
        if (jtbl_diarias_pacote.getColumnModel().getColumnCount() > 0) {
            jtbl_diarias_pacote.getColumnModel().getColumn(0).setPreferredWidth(300);
        }

        jLabel41.setFont(new java.awt.Font("Helvetica Neue", 0, 13)); // NOI18N
        jLabel41.setText("Diária");
        jLabel41.setName("jLabel41"); // NOI18N

        jtf_descricao_diaria.setEditable(false);
        jtf_descricao_diaria.setFont(new java.awt.Font("Helvetica Neue", 0, 13)); // NOI18N
        jtf_descricao_diaria.setName("jtf_descricao_diaria"); // NOI18N
        jtf_descricao_diaria.setPreferredSize(new java.awt.Dimension(300, 24));
        jtf_descricao_diaria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtf_descricao_diariaActionPerformed(evt);
            }
        });

        jb_pesquisa_diaria.setFont(new java.awt.Font("Helvetica Neue", 0, 13)); // NOI18N
        jb_pesquisa_diaria.setIcon(new javax.swing.ImageIcon(getClass().getResource("/br/com/locadora/image/pesquisar.png"))); // NOI18N
        jb_pesquisa_diaria.setName("jb_pesquisa_diaria"); // NOI18N
        jb_pesquisa_diaria.setPreferredSize(new java.awt.Dimension(24, 24));
        jb_pesquisa_diaria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jb_pesquisa_diariaActionPerformed(evt);
            }
        });
        jb_pesquisa_diaria.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jb_pesquisa_diariaKeyPressed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Helvetica Neue", 0, 13)); // NOI18N
        jLabel4.setText("Valor*");
        jLabel4.setName("jLabel4"); // NOI18N

        jtf_valor.setFont(new java.awt.Font("Helvetica Neue", 0, 13)); // NOI18N
        jtf_valor.setText("R$ 0,00");
        jtf_valor.setName("jtf_valor"); // NOI18N
        jtf_valor.setPreferredSize(new java.awt.Dimension(50, 24));
        jtf_valor.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jtf_valorFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtf_valorFocusLost(evt);
            }
        });
        jtf_valor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtf_valorKeyPressed(evt);
            }
        });

        jtf_quantidade_troca_mes.addKeyListener(new java.awt.event.KeyAdapter() {     // cria um listener ouvinte de digitação do fieldNumero

            public void keyReleased(java.awt.event.KeyEvent evt) {  // cria um ouvinte para cada tecla pressionada

                jtf_quantidade_troca_mes.setText(jtf_quantidade_troca_mes.getText().replaceAll("[^0-9]", "")); // faz com que pegue o texto a cada tecla digitada, e substituir tudo que não(^) seja numero  por ""

            }
        });
        jtf_quantidade_troca_mes.setText("1");
        jtf_quantidade_troca_mes.setFont(new java.awt.Font("Helvetica Neue", 0, 13)); // NOI18N
        jtf_quantidade_troca_mes.setName("jtf_quantidade_troca_mes"); // NOI18N
        jtf_quantidade_troca_mes.setPreferredSize(new java.awt.Dimension(50, 24));
        jtf_quantidade_troca_mes.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jtf_quantidade_troca_mesFocusGained(evt);
            }
        });
        jtf_quantidade_troca_mes.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtf_quantidade_troca_mesKeyPressed(evt);
            }
        });

        jtf_dias_combo.addKeyListener(new java.awt.event.KeyAdapter() {     // cria um listener ouvinte de digitação do fieldNumero

            public void keyReleased(java.awt.event.KeyEvent evt) {  // cria um ouvinte para cada tecla pressionada

                jtf_dias_combo.setText(jtf_dias_combo.getText().replaceAll("[^0-9]", "")); // faz com que pegue o texto a cada tecla digitada, e substituir tudo que não(^) seja numero  por ""

            }
        });
        jtf_dias_combo.setText("1");
        jtf_dias_combo.setFont(new java.awt.Font("Helvetica Neue", 0, 13)); // NOI18N
        jtf_dias_combo.setName("jtf_dias_combo"); // NOI18N
        jtf_dias_combo.setPreferredSize(new java.awt.Dimension(50, 24));
        jtf_dias_combo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtf_dias_comboKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jtf_quantidade_troca_mes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel18, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jtf_dias_combo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(5, 5, 5)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jtf_valor, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtf_descricao_pacote, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel41)
                                    .addComponent(jtf_descricao_diaria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jb_pesquisa_diaria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(5, 5, 5)
                                .addComponent(jb_adicionar, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(5, 5, 5)
                                .addComponent(jb_remover, javax.swing.GroupLayout.PREFERRED_SIZE, 27, Short.MAX_VALUE)))
                        .addGap(5, 5, 5))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jtf_codigo_pacote_promocional, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jrb_ativo)
                        .addGap(0, 0, 0)
                        .addComponent(jrb_inativo))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(0, 0, 0)
                        .addComponent(jtf_codigo_pacote_promocional, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(jLabel3)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(0, 0, 0)
                                .addComponent(jtf_valor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jtf_descricao_pacote, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, 0)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel12)
                                    .addComponent(jLabel18))
                                .addGap(0, 0, 0)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jtf_quantidade_troca_mes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jtf_dias_combo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 0, 0)
                        .addComponent(jLabel41)
                        .addGap(0, 0, 0)
                        .addComponent(jtf_descricao_diaria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jrb_ativo)
                            .addComponent(jrb_inativo))
                        .addGap(118, 118, 118)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jb_adicionar, javax.swing.GroupLayout.DEFAULT_SIZE, 25, Short.MAX_VALUE)
                                .addComponent(jb_remover, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jb_pesquisa_diaria, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(5, 5, 5)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 184, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jb_salvar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(5, 5, 5)
                        .addComponent(jb_sair, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jb_sair, jb_salvar});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jb_salvar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jb_sair, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jb_sairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_sairActionPerformed
        retornaJanelaPai();
}//GEN-LAST:event_jb_sairActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        jtf_descricao_pacote.requestFocus();
        // TODO add your handling code here:
    }//GEN-LAST:event_formWindowOpened

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        retornaJanelaPai();
    }//GEN-LAST:event_formWindowClosed

    private void jtf_descricao_pacoteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtf_descricao_pacoteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtf_descricao_pacoteActionPerformed

    private void jtf_descricao_pacoteKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtf_descricao_pacoteKeyPressed
        acionarAtalho(evt);
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            jtf_quantidade_troca_mes.requestFocus();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_jtf_descricao_pacoteKeyPressed

    private void jrb_ativoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrb_ativoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jrb_ativoActionPerformed

    private void jb_salvarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jb_salvarKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            jb_salvar.doClick();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_jb_salvarKeyPressed

    private void formKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyPressed
        acionarAtalho(evt);
        // TODO add your handling code here:
    }//GEN-LAST:event_formKeyPressed

    private void jtf_quantidade_troca_mesKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtf_quantidade_troca_mesKeyPressed
        acionarAtalho(evt);
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            jtf_dias_combo.requestFocus();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_jtf_quantidade_troca_mesKeyPressed

    private void jb_adicionarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jb_adicionarKeyPressed
        acionarAtalho(evt);
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            jb_adicionar.doClick();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_jb_adicionarKeyPressed

    private void jb_removerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_removerActionPerformed
        removeItemCombo(jtbl_diarias_pacote);
        // TODO add your handling code here:
    }//GEN-LAST:event_jb_removerActionPerformed

    private void jtbl_diarias_pacoteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtbl_diarias_pacoteMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jtbl_diarias_pacoteMouseClicked

    private void jtbl_diarias_pacoteKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtbl_diarias_pacoteKeyPressed

        // TODO add your handling code here:
    }//GEN-LAST:event_jtbl_diarias_pacoteKeyPressed

    private void jb_pesquisa_diariaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_pesquisa_diariaActionPerformed
        if (consultaDiaria == null) {
            consultaDiaria = new ConsultaDiaria();
            consultaDiaria.janelapai2 = this;
            consultaDiaria.listaTodasDiarias();
            consultaDiaria.setVisible(true);
            setStatusTela(false);
        } else {
            consultaDiaria.setVisible(true);
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_jb_pesquisa_diariaActionPerformed

    private void jb_pesquisa_diariaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jb_pesquisa_diariaKeyPressed
        acionarAtalho(evt);
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            jb_pesquisa_diaria.doClick();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_jb_pesquisa_diariaKeyPressed

    private void jtf_valorFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtf_valorFocusGained
        jtf_valor.selectAll();
        // TODO add your handling code here:
    }//GEN-LAST:event_jtf_valorFocusGained

    private void jtf_valorFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtf_valorFocusLost
        if (jtf_valor.getText().equals("")) {
            jtf_valor.setText("R$ 0,00");
        } else {
            moeda = new Moeda();
            jtf_valor.setText(moeda.setPrecoFormat(jtf_valor.getText()));
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_jtf_valorFocusLost

    private void jtf_valorKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtf_valorKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            jb_salvar.requestFocus();
        }
        acionarAtalho(evt);        // TODO add your handling code here:
    }//GEN-LAST:event_jtf_valorKeyPressed

    private void jb_adicionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_adicionarActionPerformed
        adicionarItemDiariaCombo();
        // TODO add your handling code here:
    }//GEN-LAST:event_jb_adicionarActionPerformed

    private void jtf_descricao_diariaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtf_descricao_diariaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtf_descricao_diariaActionPerformed

    private void jb_salvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jb_salvarActionPerformed
        cadastrarAlterarCombo();
        // TODO add your handling code here:
    }//GEN-LAST:event_jb_salvarActionPerformed

    private void jb_sairKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jb_sairKeyPressed
        acionarAtalho(evt);
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            jb_sair.doClick();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_jb_sairKeyPressed

    private void jb_removerKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jb_removerKeyPressed
        acionarAtalho(evt);
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            jb_remover.doClick();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_jb_removerKeyPressed

    private void jtf_dias_comboKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtf_dias_comboKeyPressed
                acionarAtalho(evt);
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            jtf_valor.requestFocus();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_jtf_dias_comboKeyPressed

    private void jtf_quantidade_troca_mesFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtf_quantidade_troca_mesFocusGained
        jtf_quantidade_troca_mes.selectAll();
        // TODO add your handling code here:
    }//GEN-LAST:event_jtf_quantidade_troca_mesFocusGained

    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new CadastraAlteraCombo().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JButton jb_adicionar;
    private javax.swing.JButton jb_pesquisa_diaria;
    private javax.swing.JButton jb_remover;
    private javax.swing.JButton jb_sair;
    private javax.swing.JButton jb_salvar;
    public static javax.swing.JRadioButton jrb_ativo;
    public static javax.swing.JRadioButton jrb_inativo;
    public static javax.swing.JTable jtbl_diarias_pacote;
    public static javax.swing.JTextField jtf_codigo_pacote_promocional;
    private javax.swing.JTextField jtf_descricao_diaria;
    public static javax.swing.JTextField jtf_descricao_pacote;
    private javax.swing.JFormattedTextField jtf_dias_combo;
    private javax.swing.JFormattedTextField jtf_quantidade_troca_mes;
    public static javax.swing.JTextField jtf_valor;
    private javax.swing.JTextArea tfa_similar;
    // End of variables declaration//GEN-END:variables

    public boolean verificarCampos() {
        String msgERRO = "Preencha os campos obrigatórios:\n";

        if (jtf_descricao_pacote.getText().trim().equals("")) {
            msgERRO = msgERRO + " *Descrição\n";
        }

        if (jtf_quantidade_troca_mes.getText().length() == 0) {
            msgERRO = msgERRO + " *Quantidade Troca/ Mês\n";
        }

        if (jtf_dias_combo.getText().length() == 0) {
            msgERRO = msgERRO + " *Duração (Dias)\n";
        }

        if (jtf_valor.getText().length() < 1) {
            msgERRO = msgERRO + " *Valor do Combo\n";
        }

        if (!msgERRO.equals("Preencha os campos obrigatórios:\n")) {
            JOptionPane.showMessageDialog(this, msgERRO);
            jtf_descricao_pacote.requestFocus();
            return false;
        } else {
            return true;
        }

    }

    public void setStatusTela(boolean status) {
        if (status) {
            this.setVisible(status);
        }
        this.setEnabled(status);
    }

    public boolean verificarCampoDiaria() {
        String msgERRO = "Preencha os campos obrigatórios:\n";

        if (jtf_descricao_diaria.getText().equals("")) {
            msgERRO = msgERRO + " *Diária\n";
        }

        if (!msgERRO.equals("Preencha os campos obrigatórios:\n")) {
            JOptionPane.showMessageDialog(this, msgERRO);
            jb_pesquisa_diaria.requestFocus();
            return false;
        } else {
            return true;
        }
    }

    public void carregaDiaria(Diaria diaria) {
        if (diaria != null) {
            this.diaria = diaria;
            jtf_descricao_diaria.setText(diaria.getNome_diaria());
            moeda = new Moeda();
            jb_adicionar.requestFocus();
        } else {
            JOptionPane.showMessageDialog(null, "Objeto diária nulo");
        }
    }

    public void carregarItensPacotePromocional(Integer codigo_pacote_promocional) {
        try {
            if (codigo_pacote_promocional != null) {
                pool = new Pool();
                itensCombo = null;
                comboDAO = new ComboDAO(pool);
                itensCombo = comboDAO.getItensPacotePromocional(codigo_pacote_promocional);

                mostrarItensPacotePromocional(itensCombo);
            }
        } catch (ParseException ex) {
            Logger.getLogger(CadastraAlteraCombo.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(CadastraAlteraCombo.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public boolean verificarTabela(Diaria diaria){
        boolean tabela = false;
        try {

            for(int i = 0; i < itensCombo.size(); i++){
                if(itensCombo.get(i).getDiaria().getCodigo_diaria().equals(diaria.getCodigo_diaria())){
                    tabela = true;
                    break;                
                }                
            }
            return tabela;            
        } catch (Exception e) {
            return tabela;            
        }
    }
    
    public void mostrarItensPacotePromocional(List<ItemCombo> itensPacotePromocional) throws ParseException {
        DefaultTableModel tableModel = (DefaultTableModel) jtbl_diarias_pacote.getModel();
        tableModel.setNumRows(0);

        if (itensPacotePromocional != null) {
            moeda = new Moeda();
            for (int i = 0; i < itensPacotePromocional.size(); i++) {
                DefaultTableModel row = (DefaultTableModel) jtbl_diarias_pacote.getModel();
                row.addRow(new Object[]{itensPacotePromocional.get(i).getDiaria().getNome_diaria()});
            }

        }
    }

    public void acionarAtalho(java.awt.event.KeyEvent evt) {
        if (evt.getKeyCode() == KeyEvent.VK_F10) {
            jb_salvar.doClick();
        }
        if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
            retornaJanelaPai();
        }
        if (evt.getKeyCode() == KeyEvent.VK_DELETE) {
            jb_remover.doClick();
        }
    }

    private void adicionarItemDiariaCombo() {
        try {
            if (!jtf_codigo_pacote_promocional.getText().equals("")) {
                if (verificarCampoDiaria() == true) {
                    if(verificarTabela(diaria) == false){
                        combo = new Combo();
                        combo.setCodigo_combo(Integer.parseInt(jtf_codigo_pacote_promocional.getText()));

                        itemCombo = new ItemCombo();
                        itemCombo.setPacotePromocional(combo);
                        itemCombo.setDiaria(diaria);

                        pool = new Pool();
                        comboDAO = new ComboDAO(pool);
                        comboDAO.salvarItem(itemCombo);

                        carregarItensPacotePromocional(combo.getCodigo_combo());

                        jtf_descricao_diaria.setText("");
                        jb_pesquisa_diaria.requestFocus();                        
                    }else {
                        JOptionPane.showMessageDialog(null, "Diária já Inserida!");
                    }
                }
            } else {
                JOptionPane.showMessageDialog(null, "Salvar primeiro o Combo");
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Error: " + ex);
        }
    }

    public void removeItemCombo(JTable tb) {
        if (tb != null) {
            DefaultTableModel row = (DefaultTableModel) tb.getModel();

            if (tb.getSelectedRow() != -1) {
                int selectedOption = JOptionPane.showConfirmDialog(this, "Deseja excluir ?", "Atenção", JOptionPane.YES_NO_OPTION);
                if (selectedOption == JOptionPane.YES_NO_OPTION) {
                    pool = new Pool();
                    comboDAO = new ComboDAO(pool);

                    if (comboDAO.excluirItem(itensCombo.get(tb.getSelectedRow()).getCodigo_item_pacote_promocional())) {
                        row.removeRow(tb.getSelectedRow());
                        carregarItensPacotePromocional(Integer.parseInt(jtf_codigo_pacote_promocional.getText()));
                    }
                }
            } else {
                JOptionPane.showMessageDialog(null, "Selecione um Combo");
            }
        }
    }

    public void cadastrarAlterarCombo() {
        if (verificarCampos()) {
            try {
                combo = new Combo();
                combo.setDescricao(jtf_descricao_pacote.getText());
                combo.setQuantidade_troca(Integer.parseInt(jtf_quantidade_troca_mes.getText()));
                combo.setDias_combo(Integer.parseInt(jtf_dias_combo.getText()));
                moeda = new Moeda();
                combo.setValor(moeda.getPrecoFormato(jtf_valor.getText()));
                if (jrb_ativo.isSelected() == true) {
                    combo.setStatus(true);
                } else {
                    combo.setStatus(false);
                }
                pool = new Pool();
                comboDAO = new ComboDAO(pool);
                if (jtf_codigo_pacote_promocional.getText().equals("")) {
                    LogInfo logInfo = new LogInfo();
                    logInfo.setDescricao("Novo Combo: "+jtf_descricao_pacote.getText());
                    logInfo.setUsuario(acesso.getUsuario());
                    pool = new Pool();
                    LogInfoDAO logInfoDAO = new LogInfoDAO(pool);
                    logInfoDAO.salvar(logInfo);

                    combo = comboDAO.salvar(combo);
                    jtf_codigo_pacote_promocional.setText(combo.getCodigo_combo().toString());
                    JOptionPane.showMessageDialog(null, "Cadastrado com Sucesso!");
                } else {
                    LogInfo logInfo = new LogInfo();
                    logInfo.setDescricao("Alterar Combo -> "+combo.getDescricao()+ " -> " + jtf_descricao_pacote.getText());
                    logInfo.setUsuario(acesso.getUsuario());
                    pool = new Pool();
                    LogInfoDAO logInfoDAO = new LogInfoDAO(pool);
                    logInfoDAO.salvar(logInfo);

                    combo.setCodigo_combo(Integer.parseInt(jtf_codigo_pacote_promocional.getText()));
                    comboDAO.atualizar(combo);
                    JOptionPane.showMessageDialog(null, "Atualizado com sucesso.");
                }
                jb_pesquisa_diaria.requestFocus();

            } catch (SQLException e) {
                System.out.println(e.getMessage() + "Problemas com a gravação: ");

                e.printStackTrace();
            } catch (NumberFormatException e) {
                System.out.println("Valor inválido: " + e.getMessage());

                e.printStackTrace();
            }

        }
    }

    private void retornaJanelaPai() {
        setVisible(false);
        if (janelapai != null) {
            janelapai.setStatusTela(true);
            janelapai.cadastraAlteraPacotePromocional = null;
            janelapai.consultarPacotePromocional();
        } else if (janelapai2 != null) {
            janelapai2.setStatusTela(true);
        }
    }

}
